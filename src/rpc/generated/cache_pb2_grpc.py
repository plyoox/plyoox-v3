# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import cache_pb2 as cache__pb2


class UpdateCacheStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteModerationCache = channel.unary_unary(
                '/UpdateCache.UpdateCache/DeleteModerationCache',
                request_serializer=cache__pb2.Id.SerializeToString,
                response_deserializer=cache__pb2.Empty.FromString,
                )
        self.DeleteAutoModerationCache = channel.unary_unary(
                '/UpdateCache.UpdateCache/DeleteAutoModerationCache',
                request_serializer=cache__pb2.Id.SerializeToString,
                response_deserializer=cache__pb2.Empty.FromString,
                )
        self.DeleteWelcomeCache = channel.unary_unary(
                '/UpdateCache.UpdateCache/DeleteWelcomeCache',
                request_serializer=cache__pb2.Id.SerializeToString,
                response_deserializer=cache__pb2.Empty.FromString,
                )
        self.DeleteLoggingCache = channel.unary_unary(
                '/UpdateCache.UpdateCache/DeleteLoggingCache',
                request_serializer=cache__pb2.Id.SerializeToString,
                response_deserializer=cache__pb2.Empty.FromString,
                )
        self.DeleteLevelCache = channel.unary_unary(
                '/UpdateCache.UpdateCache/DeleteLevelCache',
                request_serializer=cache__pb2.Id.SerializeToString,
                response_deserializer=cache__pb2.Empty.FromString,
                )


class UpdateCacheServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteModerationCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAutoModerationCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWelcomeCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLoggingCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLevelCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UpdateCacheServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteModerationCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModerationCache,
                    request_deserializer=cache__pb2.Id.FromString,
                    response_serializer=cache__pb2.Empty.SerializeToString,
            ),
            'DeleteAutoModerationCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAutoModerationCache,
                    request_deserializer=cache__pb2.Id.FromString,
                    response_serializer=cache__pb2.Empty.SerializeToString,
            ),
            'DeleteWelcomeCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWelcomeCache,
                    request_deserializer=cache__pb2.Id.FromString,
                    response_serializer=cache__pb2.Empty.SerializeToString,
            ),
            'DeleteLoggingCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLoggingCache,
                    request_deserializer=cache__pb2.Id.FromString,
                    response_serializer=cache__pb2.Empty.SerializeToString,
            ),
            'DeleteLevelCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLevelCache,
                    request_deserializer=cache__pb2.Id.FromString,
                    response_serializer=cache__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UpdateCache.UpdateCache', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UpdateCache(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteModerationCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UpdateCache.UpdateCache/DeleteModerationCache',
            cache__pb2.Id.SerializeToString,
            cache__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAutoModerationCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UpdateCache.UpdateCache/DeleteAutoModerationCache',
            cache__pb2.Id.SerializeToString,
            cache__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWelcomeCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UpdateCache.UpdateCache/DeleteWelcomeCache',
            cache__pb2.Id.SerializeToString,
            cache__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLoggingCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UpdateCache.UpdateCache/DeleteLoggingCache',
            cache__pb2.Id.SerializeToString,
            cache__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLevelCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UpdateCache.UpdateCache/DeleteLevelCache',
            cache__pb2.Id.SerializeToString,
            cache__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
